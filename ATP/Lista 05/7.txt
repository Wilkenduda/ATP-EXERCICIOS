using System;

class Program {
 static void Main () {
   int[,] matriz=new int[5,5];
   PreencherMatriz(matriz);
   Console.WriteLine($"Soma da linha 4: {SomaLinha(matriz, 4)}");
   Console.WriteLine($"Soma da coluna 2: {SomaColuna(matriz, 2)}");
   Console.WriteLine($"Soma da diagonal principal: {SomaDiagonalPrincipal(matriz)}");
   Console.WriteLine($"Soma da diagonal secund√°ria: {SomaDiagonalSecundaria(matriz)}");
   Console.WriteLine($"Soma de todos os elementos: {SomaMatriz(matriz)}");
 }
  static void PreencherMatriz(int[,] matriz){
    Console.WriteLine("Informe os elementos da matriz 5x5:");

        for (int i = 0; i < matriz.GetLength(0); i++)
        {
            for (int j = 0; j < matriz.GetLength(1); j++)
            {
                Console.Write($"M[{i + 1},{j + 1}]: ");
                matriz[i, j] = int.Parse(Console.ReadLine());
            }
        }
    }

    static int SomaLinha(int[,] matriz, int linha)
    {
        int soma = 0;
        for (int j = 0; j < matriz.GetLength(1); j++)
        {
            soma += matriz[linha - 1, j];
        }
        return soma;
    }

    static int SomaColuna(int[,] matriz, int coluna)
    {
        int soma = 0;
        for (int i = 0; i < matriz.GetLength(0); i++)
        {
            soma += matriz[i, coluna - 1];
        }
        return soma;
    }

    static int SomaDiagonalPrincipal(int[,] matriz)
    {
        int soma = 0;
        for (int i = 0; i < matriz.GetLength(0); i++)
        {
            soma += matriz[i, i];
        }
        return soma;
    }

    static int SomaDiagonalSecundaria(int[,] matriz)
    {
        int soma = 0;
        for (int i = 0; i < matriz.GetLength(0); i++)
        {
            soma += matriz[i, matriz.GetLength(1) - 1 - i];
        }
        return soma;
    }

    static int SomaMatriz(int[,] matriz)
    {
        int soma = 0;
        for (int i = 0; i < matriz.GetLength(0); i++)
        {
            for (int j = 0; j < matriz.GetLength(1); j++)
            {
                soma += matriz[i, j];
            }
        }
        return soma;
  }
}